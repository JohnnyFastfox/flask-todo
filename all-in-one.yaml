# -------------------------------------------------------
# Secret für Postgres-Passwort und Flask DATABASE_URL
# -------------------------------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: flask-todo-secrets
type: Opaque
stringData:
  # Passwort für Postgres (unbedingt nach dem Apply anpassen!)
  postgres-password: securepassword
  # DATABASE_URL für Flask (gleiche Credentials)
  database_url: postgresql://todo_user:securepassword@postgres-headless:5432/todo_db
---
# -------------------------------------------------------
# Headless Service für Postgres (StatefulSet)
# -------------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: postgres-headless
  labels:
    app: postgres
spec:
  clusterIP: None
  selector:
    app: postgres
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
---
# -------------------------------------------------------
# StatefulSet für Postgres mit Persistent Volume Claim
# -------------------------------------------------------
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  serviceName: postgres-headless
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13-alpine
          ports:
            - name: postgres
              containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "todo_user"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: flask-todo-secrets
                  key: postgres-password
            - name: POSTGRES_DB
              value: "todo_db"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
        labels:
          app: postgres
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
# -------------------------------------------------------
# Deployment für die Flask-Todo-Anwendung
# -------------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-todo-deployment
  labels:
    app: flask-todo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-todo
  template:
    metadata:
      labels:
        app: flask-todo
    spec:
      containers:
        - name: flask-todo
          image: flask-todo:1.1.0
          ports:
            - containerPort: 5000
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: flask-todo-secrets
                  key: database_url
          resources:
            requests:
              cpu: "100m"
---
# -------------------------------------------------------
# Service für die Flask-Todo-API
# -------------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: flask-todo-service
  labels:
    app: flask-todo
spec:
  type: NodePort
  selector:
    app: flask-todo
  ports:
    - port: 5000
      targetPort: 5000
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: flask-todo-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: flask-todo-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 10
