name: CI Pipeline

on:
  push:
    branches:
#      - 'major'
      - 'minor'
  pull_request:
    branches:
#      - 'major'
      - 'minor'

jobs:
  build-test-major:
    if: ${{ github.ref_name == 'major' }}
    runs-on: ubuntu-latest
    steps:
      - name: Repository auschecken
        uses: actions/checkout@v3

      - name: Python einrichten
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Abhängigkeiten installieren
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Code formatieren mit Black
        run: black --check .

      - name: Linting mit Flake8
        run: flake8 .

      - name: Typüberprüfung mit Mypy
        run: mypy .

      - name: Tests ausführen
        run: pytest

      - name: Docker-Image bauen
        run: docker build -t my_project:latest .

      - name: Trivy-Sicherheitsscan
        uses: aquasecurity/trivy-action@v0.9.2
        with:
          image-ref: my_project:latest

  lint-minor:
    if: ${{ github.ref_name == 'minor' }}
    runs-on: ubuntu-latest
    steps:
      - name: Repository auschecken
        uses: actions/checkout@v3

      - name: Python einrichten
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.4'

      - name: Abhängigkeiten installieren
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pre-commit autoupdate --repo https://github.com/pre-commit/pre-commit-hooks

      - name: Pre-Commit Hooks ausführen
        run: pre-commit run --all-files

  build-and-scan-docker:
    if: ${{ github.ref_name == 'minor' }}
    name: Docker-Image bauen und scannen
    needs: lint-minor
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Code auschecken
        uses: actions/checkout@v3

      - name: Docker-Image bauen
        run: |
          docker build -t flask-todo:${{ github.sha }} .
          docker build -t flask-todo:latest .

      - name: Trivy-Sicherheitsscan des Docker-Images
        uses: aquasecurity/trivy-action@v0.31.0
        with:
          image-ref: flask-todo:${{ github.sha }}

  notify:
    name: Deployment-Vorbereitung
    needs: build-and-scan-docker
    runs-on: ubuntu-latest
    steps:
    - name: Build erfolgreich!
      run: echo "Das Docker-Image flask-todo:${{ github.sha }} wurde erfolgreich gebaut und gepusht."
